{"version":3,"sources":["Pages/Footer.js","Pages/Homepage.js","Authentication/Authentication_page.js","Navigation/Navbar.js","Navigation/NavbarRouterdom.js","App.js","reportWebVitals.js","index.js"],"names":["iconstyle","fontSize","paddingRight","Footertext","color","textAlign","fontWeight","marginTop","Footer","justify","span","style","display","flexDirection","padding","InstagramFilled","FacebookFilled","TwitterSquareFilled","GithubFilled","margin","GlobalOutlined","paddingLeft","backgroundColor","height","Meta","Card","choose","id","image","Desciption","choose1","Homepage","className","type","justifyContent","paddingBottom","map","item","index","hoverable","width","border","cover","alt","src","description","overflowX","actions","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","title","Option","Select","Authentication_page","useState","formtype","setFormtype","Form","useForm","form","autoCompleteResult","setAutoCompleteResult","onFinish","values","console","log","prefixSelector","Item","name","noStyle","value","websiteOptions","website","label","initialValues","remember","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","htmlType","onClick","residence","scrollToFirstError","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","tooltip","whitespace","addonBefore","options","onChange","domain","extra","gutter","navitems","fontFamily","dropdownmenu","Navbar","drawer","setDrawer","drawer_Authentication","setDrawer_Authentication","getWindowDimensions","windowDimensions","setWindowDimensions","window","innerWidth","innerHeight","useEffect","handleResize","addEventListener","removeEventListener","position","background","zIndex","to","MenuOutlined","visible","placement","onClose","closeIcon","NavbarRouterdom","strict","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4abac69.chunk.js","sourcesContent":["import { Row, Layout, Col } from 'antd'\r\nimport React from 'react'\r\nimport '../Pages/style.css'\r\nimport { InstagramFilled, FacebookFilled, TwitterSquareFilled, GithubFilled, GlobalOutlined } from '@ant-design/icons';\r\nconst iconstyle = {\r\n    fontSize: \"1rem\",\r\n    paddingRight: \"10px\",\r\n\r\n\r\n}\r\nconst Footertext = {\r\n    fontSize: \"1rem\",\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"Bold\",\r\n    marginTop: \"2rem\"\r\n\r\n}\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <Layout>\r\n                <Row justify=\"center\">\r\n                    <h1>Freelancer Store</h1>\r\n                </Row>\r\n\r\n                <Row justify=\"center\">\r\n                    <Col span={6} style={Footertext}>\r\n                        Community\r\n                    <div style={{ display: \"flex\", flexDirection: 'column', color: \"grey\", fontWeight: \"400\" }}>\r\n                            <span style={{ padding: \"5px\" }}>Events</span>\r\n                            <span style={{ padding: \"5px\" }}>Blog</span>\r\n                            <span style={{ padding: \"5px\" }}>Forums</span>\r\n                            <span style={{ padding: \"5px\" }}>Podcast</span>\r\n\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={6} style={Footertext}>\r\n                        Support\r\n                        <div style={{ display: \"flex\", flexDirection: 'column', color: \"grey\", fontWeight: \"400\" }}>\r\n                            <span style={{ padding: \"5px\" }}>Help & Support</span>\r\n                            <span style={{ padding: \"5px\" }}>Trust & Saftey</span>\r\n                            <span style={{ padding: \"5px\" }}>Selling</span>\r\n\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={6} style={Footertext}>\r\n                        About us\r\n                        <div style={{ display: \"flex\", flexDirection: 'column', color: \"grey\", fontWeight: \"400\" }}>\r\n                            <span style={{ padding: \"5px\" }}>Careers</span>\r\n                            <span style={{ padding: \"5px\" }}>Partnerships</span>\r\n                            <span style={{ padding: \"5px\" }}>Privacy policy</span>\r\n\r\n                            <span style={{ padding: \"5px\" }}>Terms & Services</span>\r\n\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row justify=\"center\">\r\n                    <p style={{ color: 'grey' }}>Freelance International Ltd. 2021</p>\r\n                </Row>\r\n                <Row justify=\"center\">\r\n\r\n                    <InstagramFilled style={iconstyle} />\r\n                    <FacebookFilled style={iconstyle} />\r\n                    <TwitterSquareFilled style={iconstyle} />\r\n                    <GithubFilled style={iconstyle} />\r\n\r\n                </Row>\r\n                <Row justify=\"center\" style={{ margin: \"1rem\" }} >\r\n                    <Col>\r\n                        <GlobalOutlined style={{ paddingLeft: \"2rem\" }} />\r\n                    </Col>\r\n                    <p style={{ color: 'grey', paddingRight: \"2rem\" }}>English</p>\r\n\r\n                </Row>\r\n            </Layout>\r\n            <Row style={{ backgroundColor: \"black\", height: \"3rem\" }}></Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Row, Layout, Col, Divider, Button, Image, Card, Avatar } from 'antd'\r\nimport React from 'react'\r\nimport '../Pages/style.css'\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nconst { Meta } = Card;\r\nconst choose = [\r\n    {\r\n        id: 1,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n    {\r\n        id: 2,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n    {\r\n        id: 3,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n]\r\nconst choose1 = [\r\n    {\r\n        id: 1,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n    {\r\n        id: 2,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n    {\r\n        id: 3,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcu_WS7ciRH9fOqCbPyk1vI4I8WiTknpTGPA&usqp=CAU\",\r\n        Desciption: \"I am using antd for my app. I need to change the color of a default Primary Button from Blue to Grey. It seems like antd doesn't provide such an option. How can I change the button color easily?\",\r\n    },\r\n\r\n]\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <div className=\"Header_Container\">\r\n                    <Row justify=\"center\">\r\n                        <div>\r\n                            <h1 className=\"Header_heading\">We Care about Your Dreams</h1>\r\n                            <Divider type=\"horizontal\" style={{ color: \"orange\", fontWeight: \"900\", fontSize: \"2rem\" }}>___________</Divider>\r\n                            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <p className=\"Heading_Text\" >As is described in the Law of Continuity of Gestalt psychology, in the perceptual process, people usually tend to understand the object in the way that it is firstly perceived, to let the straight lines be straight and let the curve</p>\r\n                            </div>\r\n                            <div style={{ textAlign: \"center\", paddingBottom: \"10rem\" }}>\r\n                                <button className=\"Heading_Button\">Signup</button>\r\n                            </div>\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n                {/* */}\r\n\r\n                <Row justify=\"center\">\r\n                    <h1 className=\"Content_Heading\" style={{ textAlign: \"center\" }}>WHY Chose from Here</h1>\r\n                </Row>\r\n                <Row justify=\"center\">\r\n                    {choose.map((item, index) => {\r\n                        return (\r\n                            <Card\r\n                                hoverable\r\n                                style={{ width: 200, margin: \"1rem\", border: \"none\" }}\r\n                                cover={<img alt=\"example\" src={item.image} />}\r\n                            >\r\n                                <Meta description={item.Desciption} />\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </Row>\r\n\r\n                {/* List */}\r\n                <Row>\r\n                    <h1 className=\"Content_Heading\">Top Rating Producers</h1>\r\n                </Row>\r\n                <Row justify=\"center\" >\r\n\r\n                    <div style={{ display: \"flex\", overflowX: \"scroll\" }} >\r\n                        {choose1.map((item, index) => {\r\n                            return (\r\n                                <Card\r\n                                    hoverable\r\n                                    key={index}\r\n                                    style={{ width: 300, margin: \"5px\" }}\r\n                                    cover={\r\n                                        <img\r\n                                            alt=\"example\"\r\n                                            src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\r\n                                            style={{ width: 300 }}\r\n                                        />\r\n                                    }\r\n                                    actions={[\r\n                                        <SettingOutlined key=\"setting\" />,\r\n                                        <EditOutlined key=\"edit\" />,\r\n                                        <EllipsisOutlined key=\"ellipsis\" />,\r\n                                    ]}\r\n                                >\r\n                                    <Meta\r\n                                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                        title=\"Card title\"\r\n                                        description=\"This is the description\"\r\n                                    />\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </Row>\r\n                {/* List */}\r\n                <Row>\r\n                    <h1 className=\"Content_Heading\">Top Rating Producers</h1>\r\n                </Row>\r\n                <Row justify=\"center\" >\r\n\r\n                    <div style={{ display: \"flex\", overflowX: \"scroll\" }}>\r\n                        {choose1.map((item, index) => {\r\n                            return (\r\n                                <Card\r\n                                    hoverable\r\n                                    key={index}\r\n                                    style={{ width: 300 }}\r\n                                    cover={\r\n                                        <img\r\n                                            alt=\"example\"\r\n                                            src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\r\n                                            style={{ width: 300, margin: \"5px\" }}\r\n                                        />\r\n                                    }\r\n                                    actions={[\r\n                                        <SettingOutlined key=\"setting\" />,\r\n                                        <EditOutlined key=\"edit\" />,\r\n                                        <EllipsisOutlined key=\"ellipsis\" />,\r\n                                    ]}\r\n                                >\r\n                                    <Meta\r\n                                        avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                        title=\"Card title\"\r\n                                        description=\"This is the description\"\r\n                                    />\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </Row>\r\n                \r\n\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './Authentication.css'\r\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\n// const residences = [\r\n//     {\r\n//         value: 'zhejiang',\r\n//         label: 'Zhejiang',\r\n//         children: [\r\n//             {\r\n//                 value: 'hangzhou',\r\n//                 label: 'Hangzhou',\r\n//                 children: [\r\n//                     {\r\n//                         value: 'xihu',\r\n//                         label: 'West Lake',\r\n//                     },\r\n//                 ],\r\n//             },\r\n//         ],\r\n//     },\r\n//     {\r\n//         value: 'jiangsu',\r\n//         label: 'Jiangsu',\r\n//         children: [\r\n//             {\r\n//                 value: 'nanjing',\r\n//                 label: 'Nanjing',\r\n//                 children: [\r\n//                     {\r\n//                         value: 'zhonghuamen',\r\n//                         label: 'Zhong Hua Men',\r\n//                     },\r\n//                 ],\r\n//             },\r\n//         ],\r\n//     },\r\n// ];\r\n\r\n\r\nconst Authentication_page = () => {\r\n    const [formtype, setFormtype] =   useState(false)\r\n    const [form] = Form.useForm();\r\n\r\n    const [autoCompleteResult, setAutoCompleteResult] = useState([])\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n\r\n\r\n\r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n            setAutoCompleteResult([]);\r\n        } else {\r\n            setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n    };\r\n\r\n    const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n    }));\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Row justify=\"center\" style={{ marginTop:formtype ==false?\"10rem\":\"3rem\" }}>\r\n\r\n            <Col span={20}>\r\n                <Row><h1>{formtype==false ?\"Login\":\"Signup\"}</h1></Row>\r\n                {formtype == false ?\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Username!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <span className=\"text\">Forgot password</span>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <button htmlType=\"submit\" className=\"formbutton\">login</button>\r\n\r\n                           Or <span className=\"text\" onClick={() => { setFormtype(!formtype) }}>Register now!</span>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    :\r\n                    <div>\r\n                        <Form\r\n\r\n                            form={form}\r\n                            name=\"register\"\r\n                            onFinish={onFinish}\r\n                            initialValues={{\r\n                                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                                prefix: '86',\r\n                            }}\r\n                            scrollToFirstError\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                rules={[\r\n                                    {\r\n                                        type: 'email',\r\n                                        message: 'The input is not valid E-mail!',\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your E-mail!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your password!',\r\n                                    },\r\n                                ]}\r\n                                hasFeedback\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                label=\"Confirm Password\"\r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(_, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n\r\n                                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                        },\r\n                                    }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"nickname\"\r\n                                label=\"Nickname\"\r\n                                tooltip=\"What do you want others to call you?\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your nickname!',\r\n                                        whitespace: true,\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n\r\n                            {/* <Form.Item\r\n        name=\"residence\"\r\n        label=\"Habitual Residence\"\r\n        rules={[\r\n          {\r\n            type: 'array',\r\n            required: true,\r\n            message: 'Please select your habitual residence!',\r\n          },\r\n        ]}\r\n      >\r\n        <Cascader options={residences} />\r\n      </Form.Item> */}\r\n\r\n                            <Form.Item\r\n                                name=\"phone\"\r\n                                label=\"Phone Number\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your phone number!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                    addonBefore={prefixSelector}\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"website\"\r\n                                label=\"Website\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input website!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\r\n                                    <Input />\r\n                                </AutoComplete>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"gender\"\r\n                                label=\"Gender\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please select gender!',\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select placeholder=\"select your gender\">\r\n                                    <Option value=\"male\">Male</Option>\r\n                                    <Option value=\"female\">Female</Option>\r\n                                    <Option value=\"other\">Other</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                                <Row gutter={8}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item\r\n                                            name=\"captcha\"\r\n                                            noStyle\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input the captcha you got!',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Button>Get captcha</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form.Item>\r\n                            {/* \r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        rules={[\r\n          {\r\n            validator: (_, value) =>\r\n              value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n          },\r\n        ]}\r\n        {...tailFormItemLayout}\r\n      >\r\n        <Checkbox>\r\n          I have read the <a href=\"\">agreement</a>\r\n        </Checkbox>\r\n      </Form.Item> */}\r\n                            <Form.Item>\r\n                                <button htmlType=\"submit\" className=\"formbutton\">Signup</button>\r\n\r\nOr <span className=\"text\" onClick={() => { setFormtype(!formtype) }}>Login here!</span>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Authentication_page","import { Col, Drawer, Image, Row } from 'antd';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { MenuOutlined, HomeFilled } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Authentication_page from '../Authentication/Authentication_page';\r\n\r\n\r\n// navbar styling\r\nconst navitems = {\r\n    color: \"darkgrey\",\r\n    fontFamily: \"sans-serif\",\r\n}\r\n\r\nconst dropdownmenu = {\r\n    padding: \"1rem\",\r\n    fontSize: \"20px\"\r\n}\r\n\r\nconst Navbar = () => {\r\n    const [drawer, setDrawer] = useState(false);\r\nconst [drawer_Authentication, setDrawer_Authentication] = useState(false)\r\n\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n    // get window dimensions\r\n    function getWindowDimensions() {\r\n        const { innerWidth: width, innerHeight: height } = window;\r\n        return {\r\n            width,\r\n            height\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n\r\n    const onClose = () => {\r\n        setDrawer(false);\r\n        \r\n    };\r\n    const onClose_Authentication=()=>{\r\n        setDrawer_Authentication(false)\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Row style={{ padding: \"10px 5px 5px 5px\", position: \"fixed\", width: \"100%\", background: \"white\", zIndex: \"999\" }}>\r\n                <Col span={4}>\r\n                    <Image src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdOFkJdONNVcgQtzjt6LkFzmz2xw8j1N8NeQ&usqp=CAU\" width=\"150px\" height=\"30px\" />\r\n                </Col>\r\n                {windowDimensions.width >= 720 ?\r\n                    <Col span={20}>\r\n                        <Row>\r\n                            <Col span={3} >\r\n                                <Link style={navitems} to=\"/\">Home</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link style={navitems} to=\"/\">Explore</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link style={navitems} to=\"/\">Categories</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link style={navitems} to=\"/\">Become a Seller</Link>\r\n                            </Col>\r\n                            <Col span={3} >\r\n                                <Link style={navitems} to=\"/\">About</Link>\r\n                            </Col>\r\n                            <Col span={6} style={{ textAlign: \"Right\" }}>\r\n                                <div style={navitems} onClick={()=>setDrawer_Authentication(true)}>Login/Signup</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    :\r\n                    <Col span={20} style={{ paddingLeft: \"15rem\" }}><MenuOutlined onClick={() => { setDrawer(true) }} style={{ fontSize: \"2rem\" }}></MenuOutlined></Col>\r\n                }\r\n\r\n            </Row>\r\n            <Drawer\r\n\r\n                visible={drawer}\r\n                placement={'bottom'}\r\n                title=\"Menu\"\r\n                width={\"100%\"}\r\n                height={\"auto\"}\r\n                onClose={onClose}\r\n                closeIcon={false}\r\n                style={{ textAlign: \"center\" }}\r\n\r\n            >\r\n                <div style={{ textAlign: \"center\", marginTop: \"0rem\" }}>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link onClick={() => setDrawer(false)} style={navitems} to=\"/\">Home</Link>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link onClick={() => setDrawer(false)} style={navitems} to=\"/\">Explore</Link>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link onClick={() => setDrawer(false)} style={navitems} to=\"/sample\">Categories</Link>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link onClick={() => setDrawer(false)} style={navitems} to=\"/sample\">Become a Seller</Link>\r\n                    </Col>\r\n                    <Col style={dropdownmenu}>\r\n                        <Link onClick={() => setDrawer(false)} style={navitems} to=\"/sample\">About</Link></Col>\r\n                        <Col style={dropdownmenu}>\r\n                        <div  onClick={() => {setDrawer_Authentication(true);setDrawer(false)}} style={navitems} >Login/Signup</div>\r\n                        </Col>\r\n                </div>\r\n            </Drawer>\r\n            <Drawer\r\n                placement={'right'}\r\n                onClose={onClose_Authentication}\r\n                visible={drawer_Authentication}\r\n                width={windowDimensions.width >= 720 ? \"30%\" : \"100%\"}\r\n                height={\"auto\"}\r\n            >\r\n                <Authentication_page/>\r\n\r\n                </Drawer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","\r\nimport React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport Footer from '../Pages/Footer'\r\nimport Homepage from '../Pages/Homepage';\r\nimport Navbar from '../Navigation/Navbar'\r\nimport sample from '../Pages/sample'\r\nimport Authentication_page from '../Authentication/Authentication_page';\r\n\r\nconst NavbarRouterdom = () => {\r\n    return (\r\n        <Router>\r\n            <Navbar/>\r\n            <Switch >\r\n                <Route strict exact path=\"/\"  component={Homepage}></Route>\r\n                <Route path=\"/Authentication\" component={Authentication_page}></Route>\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default NavbarRouterdom\r\n","import './App.css';\nimport 'antd/dist/antd.css';\nimport NavbarRouterdom from './Navigation/NavbarRouterdom';\n\nconst App = () => {\n  return (\n    <div>\n      <NavbarRouterdom/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}